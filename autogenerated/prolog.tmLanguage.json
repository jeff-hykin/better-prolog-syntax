{
  "version": "",
  "name": "Prolog",
  "scopeName": "source.prolog",
  "fileTypes": [
    ".pl"
  ],
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#character"
    },
    {
      "include": "#string"
    },
    {
      "include": "#numeric_literal"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#predicate"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#symbol"
    },
    {
      "include": "#list"
    },
    {
      "include": "#paraentheses"
    }
  ],
  "repository": {
    "00a6652a37a_block_comment": {
      "begin": "\\s*+(\\/\\*)",
      "end": "\\*\\/",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.comment.begin.prolog"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.comment.end.prolog"
        }
      },
      "name": "comment.block.prolog"
    },
    "00a6652a37a_inline_comment": {
      "match": "(\\/\\*)((?:[^\\*]|(?:\\*)++[^\\/])*+((?:\\*)++\\/))",
      "captures": {
        "1": {
          "name": "comment.block.prolog punctuation.definition.comment.begin.prolog"
        },
        "2": {
          "name": "comment.block.prolog"
        },
        "3": {
          "patterns": [
            {
              "match": "\\*\\/",
              "name": "comment.block.prolog punctuation.definition.comment.end.prolog"
            },
            {
              "match": "\\*",
              "name": "comment.block.prolog"
            }
          ]
        }
      }
    },
    "00a6652a37a_line_comment": {
      "match": "\\s*+(%)(.*)",
      "captures": {
        "1": {
          "name": "punctuation.definition.comment.prolog comment.line.prolog"
        },
        "2": {
          "name": "comment.line.prolog"
        }
      }
    },
    "04358e2e175_built_in_predicates": {
      "begin": "(?<!\\w)((?:(?:write)|(?:prolog_load_file)|(?:goal_expansion)|(?:thread_message_hook)|(?:goal_expansion)|(?:message_property)|(?:term_expansion)|(?:term_expansion)|(?:exception)|(?:prolog_list_goal)|(?:message_hook)|(?:resource)|(?:print_path)|(?:expand_query)|(?:library_directory)|(?:expand_answer)|(?:prolog_file_type)|(?:resource)|(?:maplist)|(?:portray)|(?:file_search_path)|(?:read_term)|(?:line_position)|(?:mutex_trylock)|(?:garbage_collect)|(?:fast_term_serialized)|(?:goal_expansion)|(?:split_string)|(?:mutex_unlock)|(?:ttyflush)|(?:prolog_skip_frame)|(?:mutex_create)|(?:get)|(?:fast_write)|(?:float)|(?:read_clause)|(?:stream_position_data)|(?:del_attrs)|(?:fast_read)|(?:read_string)|(?:set_stream)|(?:read_term_from_atom)|(?:nb_setval)|(?:reexport)|(?:consult)|(?:working_directory)|(?:findall)|(?:get0)|(?:tty_goto)|(?:unload_file)|(?:ensure_loaded)|(?:read_term)|(?:set_prolog_stack)|(?:attach_packs)|(?:byte_count)|(?:transaction)|(?:tty_put)|(?:expand_file_search_path)|(?:flag)|(?:redefine_system_predicate)|(?:arg)|(?:load_files)|(?:module_property)|(?:character_count)|(?:attvar)|(?:mutex_unlock_all)|(?:call_with_depth_limit)|(?:tty_size)|(?:debugging)|(?:prolog_current_choice)|(?:compile_predicates)|(?:use_module)|(?:zip_lock)|(?:line_count)|(?:variant_sha1)|(?:abort)|(?:tty_get_capability)|(?:assertz)|(?:random_property)|(?:get_attr)|(?:tab)|(?:variant_hash)|(?:prolog_choice_attribute)|(?:set_prolog_flag)|(?:assert)|(?:asserta)|(?:reexport)|(?:zip_clone)|(?:term_hash)|(?:asserta)|(?:use_module)|(?:zip_close_)|(?:prompt)|(?:trie_property)|(?:assertz)|(?:load_files)|(?:string)|(?:tab)|(?:zip_open_stream)|(?:notrace)|(?:visible)|(?:mutex_create)|(?:skip)|(?:open_null_stream)|(?:del_attr)|(?:tmp_file_stream)|(?:create_prolog_flag)|(?:ground)|(?:is_stream)|(?:prolog_skip_level)|(?:mutex_destroy)|(?:get)|(?:assert)|(?:get_attrs)|(?:mutex_property)|(?:put_attr)|(?:use_foreign_library)|(?:mutex_lock)|(?:get0)|(?:prolog_frame_attribute)|(?:current_signal)|(?:op)|(?:fill_buffer)|(?:atom)|(?:erase)|(?:put)|(?:open_string)|(?:current_op)|(?:atomic)|(?:term_expansion)|(?:clause)|(?:term_string)|(?:size_abstract_term)|(?:current_key)|(?:print_message_lines)|(?:seen)|(?:call_shared_object_function)|(?:nth_clause)|(?:copy_term)|(?:read_string)|(?:message_to_string)|(?:write_length)|(?:true)|(?:duplicate_term)|(?:atom_prefix)|(?:on_signal)|(?:clause)|(?:copy_term_nat)|(?:see)|(?:source_file)|(?:recorded)|(?:transaction)|(?:recorda)|(?:seeing)|(?:atom_string)|(?:integer)|(?:predicate_option_mode)|(?:tell)|(?:recordz)|(?:string_code)|(?:get_flag)|(?:style_check)|(?:append)|(?:get_string_code)|(?:string_codes)|(?:set_flag)|(?:tnot)|(?:recorda)|(?:string_chars)|(?:length)|(?:absolute_file_name)|(?:predicate_option_type)|(?:telling)|(?:current_trie)|(?:recorded)|(?:text_to_string)|(?:set_stream_position)|(?:instance)|(?:put)|(?:recordz)|(?:use_foreign_library)|(?:close_shared_object)|(?:skip)|(?:told)|(?:keysort)|(?:thread_wait)|(?:callable)|(?:msort)|(?:size_file)|(?:halt)|(?:import_module)|(?:thread_setconcurrency)|(?:dict_pairs)|(?:thread_update)|(?:dict_create)|(?:thread_peek_message)|(?:set_end_of_stream)|(?:read_link)|(?:is_dict)|(?:set_module)|(?:stream_property)|(?:sort)|(?:call_continuation)|(?:engine_post)|(?:non_terminal)|(?:time_file)|(?:with_tty_raw)|(?:thread_get_message)|(?:attach_packs)|(?:memberchk)|(?:call)|(?:engine_next)|(?:noprofile)|(?:access_file)|(?:engine_destroy)|(?:get_dict)|(?:engine_create)|(?:thread_get_message)|(?:current_transaction)|(?:thread_send_message)|(?:stream_pair)|(?:clause_property)|(?:var)|(?:attach_packs)|(?:is_list)|(?:nb_link_dict)|(?:is_dict)|(?:message_queue_set)|(?:trie_gen_compiled)|(?:add_import_module)|(?:catch)|(?:transaction_updates)|(?:trie_gen_compiled)|(?:zipper_open_new_file_in_zip)|(?:current_locale)|(?:seek)|(?:message_queue_destroy)|(?:put_dict)|(?:thread_get_message)|(?:set_locale)|(?:copy_stream_data)|(?:setof)|(?:strip_module)|(?:delete_import_module)|(?:exists_directory)|(?:nb_set_dict)|(?:thread_peek_message)|(?:sub_atom)|(?:prolog_nodebug)|(?:exists_file)|(?:b_set_dict)|(?:thread_send_message)|(?:prolog_debug)|(?:source_location)|(?:wait_for_input)|(?:noprotocol)|(?:license)|(?:put_dict)|(?:setenv)|(?:nb_delete)|(?:thread_join)|(?:put_attrs)|(?:read)|(?:require)|(?:getenv)|(?:locale_destroy)|(?:read_pending_codes)|(?:version)|(?:unwrap_predicate)|(?:license)|(?:thread_detach)|(?:zipper_open_current)|(?:protocol)|(?:autoload_path)|(?:thread_property)|(?:thread_alias)|(?:version)|(?:thread_statistics)|(?:write)|(?:read_pending_chars)|(?:prolog_load_context)|(?:initialize)|(?:protocola)|(?:known_licenses)|(?:zip_file_info_)|(?:module)|(?:message_queue_property)|(?:copy_stream_data)|(?:b_setval)|(?:prompt1)|(?:cyclic_term)|(?:del_dict)|(?:writeln)|(?:write_term)|(?:compound)|(?:message_queue_create)|(?:prolog)|(?:protocolling)|(?:license)|(?:zipper_goto)|(?:acyclic_term)|(?:writeq)|(?:message_queue_create)|(?:prolog_unlisten)|(?:nb_linkval)|(?:term_to_atom)|(?:set_prolog_IO)|(?:default_module)|(?:autoload)|(?:b_getval)|(?:zip_unlock)|(?:nonground)|(?:sleep)|(?:import)|(?:nb_current)|(?:dcg_translate_rule)|(?:nonvar)|(?:locale_create)|(?:nb_getval)|(?:get_single_char)|(?:set_system_IO)|(?:term_string)|(?:sort)|(?:reload_library_index)|(?:write_canonical)|(?:export)|(?:locale_property)|(?:break)|(?:make_library_index)|(?:prolog_listen)|(?:atom_to_term)|(?:with_output_to)|(?:engine_yield)|(?:write_term)|(?:make_library_index)|(?:prolog_listen)|(?:is_thread)|(?:residual_goals)|(?:current_functor)|(?:number)|(?:subsumes_term)|(?:unify_with_occurs_check)|(?:unsetenv)|(?:abolish_monotonic_tables)|(?:notrace)|(?:same_term)|(?:engine_next_reified)|(?:tracing)|(?:goal_expansion)|(?:abolish_nonincremental_tables)|(?:freeze)|(?:radial_restraint)|(?:char_conversion)|(?:term_expansion)|(?:trie_gen)|(?:trie_insert)|(?:trace)|(?:predicate_property)|(?:format)|(?:current_char_conversion)|(?:compare)|(?:date_time_stamp)|(?:format_time)|(?:string_upper)|(?:abolish_table_subgoals)|(?:cancel_halt)|(?:functor)|(?:engine_create)|(?:once)|(?:normalize_space)|(?:abolish)|(?:stamp_date_time)|(?:upcase_atom)|(?:abolish_shared_tables)|(?:string_lower)|(?:var_number)|(?:start_abstract_tabling)|(?:compound_name_arguments)|(?:term_hash)|(?:term_variables)|(?:at_halt)|(?:downcase_atom)|(?:char_type)|(?:compound_name_arity)|(?:code_type)|(?:sub_string)|(?:wildcard_match)|(?:setlocale)|(?:directory_files)|(?:expand_term)|(?:compiling)|(?:repeat)|(?:abolish)|(?:copy_term)|(?:get_dict)|(?:halt)|(?:engine_self)|(?:expand_goal)|(?:wildcard_match)|(?:current_engine)|(?:file_name_extension)|(?:delete_file)|(?:tabled_call)|(?:garbage_collect_atoms)|(?:expand_goal)|(?:expand_file_name)|(?:current_table)|(?:mutex_statistics)|(?:delete_directory)|(?:garbage_collect_clauses)|(?:phrase)|(?:current_flag)|(?:abolish_all_tables)|(?:print)|(?:term_variables)|(?:numbervars)|(?:profiler)|(?:answer_count_restraint)|(?:dcg_translate_rule)|(?:is_engine)|(?:format)|(?:dwim_match)|(?:term_attvars)|(?:phrase)|(?:prolog_to_os_filename)|(?:trie_insert)|(?:is_absolute_file_name)|(?:untable)|(?:call)|(?:abolish_module_tables)|(?:file_base_name)|(?:make_directory)|(?:call_dcg)|(?:file_directory_name)|(?:engine_fetch)|(?:select_dict)|(?:unifiable)|(?:expand_term)|(?:start_subsumptive_tabling)|(?:term_singletons)|(?:reset_profiler)|(?:rename_file)|(?:trie_destroy)|(?:trie_gen)|(?:atom_length)|(?:format_time)|(?:is_most_general_term)|(?:trie_lookup)|(?:call_residue_vars)|(?:is_trie)|(?:context_module)|(?:source_file_property)|(?:trie_delete)|(?:trie_new)|(?:same_file)|(?:start_moded_tabling)|(?:autoload)|(?:current_prolog_flag)|(?:var_property)|(?:trie_term)|(?:write)|(?:rational)|(?:start_tabling)|(?:abolish_nonincremental_tables)|(?:trie_update)|(?:writeln)|(?:abolish_private_tables)|(?:not_exists)|(?:trie_insert)|(?:engine_post)|(?:tmp_file)|(?:frozen)|(?:undefined)|(?:read)|(?:prolog_current_frame)|(?:print_message)|(?:number_string)|(?:thread_create)|(?:atom_concat)|(?:put_byte)|(?:number_codes)|(?:write_canonical)|(?:float_parts)|(?:put_char)|(?:open)|(?:verbose_expansion)|(?:number_chars)|(?:print)|(?:qcompile)|(?:writeq)|(?:put_code)|(?:peek_byte)|(?:forall)|(?:thread_self)|(?:bagof)|(?:format)|(?:atom_codes)|(?:peek_char)|(?:current_format_predicate)|(?:atom_chars)|(?:nth_integer_root_and_remainder)|(?:nospy)|(?:thread_exit)|(?:print_toplevel_variables)|(?:atomic_concat)|(?:format_predicate)|(?:name)|(?:divmod)|(?:peek_code)|(?:peek_byte)|(?:absolute_file_name)|(?:collation_key)|(?:get_time)|(?:call)|(?:at_end_of_stream)|(?:atom_number)|(?:call)|(?:thread_signal)|(?:findall)|(?:flush_output)|(?:peek_string)|(?:peek_char)|(?:nl)|(?:shift)|(?:current_blob)|(?:atomic_list_concat)|(?:reset)|(?:call)|(?:at_end_of_stream)|(?:put_char)|(?:thread_idle)|(?:put_byte)|(?:open_shared_object)|(?:nl)|(?:put_code)|(?:read_term_with_history)|(?:with_mutex)|(?:call)|(?:char_code)|(?:flush_output)|(?:numbervars)|(?:false)|(?:get_char)|(?:not)|(?:leash)|(?:current_input)|(?:setup_call_cleanup)|(?:set_random)|(?:between)|(?:atomics_to_string)|(?:current_predicate)|(?:set_output)|(?:call_cleanup)|(?:deterministic)|(?:plus)|(?:statistics)|(?:copy_predicate_clauses)|(?:dwim_predicate)|(?:get_code)|(?:open_shared_object)|(?:set_input)|(?:open_resource)|(?:qcompile)|(?:blob)|(?:string_concat)|(?:call)|(?:current_resource)|(?:atomics_to_string)|(?:peek_code)|(?:dwim_match)|(?:close)|(?:throw)|(?:open_resource)|(?:current_arithmetic_function)|(?:open_xterm)|(?:prolog_cut_to)|(?:string_length)|(?:get_byte)|(?:retractall)|(?:call)|(?:trim_stacks)|(?:exists_source)|(?:call_cleanup)|(?:nospyall)|(?:succ)|(?:sub_atom_icasechk)|(?:exists_source)|(?:set_prolog_gc_thread)|(?:atomic_list_concat)|(?:setup_call_catcher_cleanup)|(?:retract)|(?:source_file)|(?:setarg)|(?:findnsols)|(?:get_byte)|(?:thread_join)|(?:thread_create)|(?:rational)|(?:snapshot)|(?:float_class)|(?:get_char)|(?:call_with_inference_limit)|(?:ignore)|(?:gc_file_search_cache)|(?:compile_aux_clauses)|(?:current_module)|(?:prolog_alert_signal)|(?:get_code)|(?:prolog_stack_property)|(?:open)|(?:spy)|(?:nb_linkarg)|(?:apply)|(?:register_iri_scheme)|(?:shell)|(?:current_predicate)|(?:catch_with_backtrace)|(?:findnsols)|(?:current_output)|(?:shell)|(?:close)|(?:fail)|(?:nb_setarg)|(?:bounded_number)|(?:current_atom)|(?:ERROR))) *+(\\()",
      "end": " *+(\\))",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.call.prolog support.type.built-in.prolog"
        },
        "2": {
          "name": "punctuation.section.function.call.prolog entity.name.function.call.prolog support.type.built-in.prolog"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.section.function.call.prolog entity.name.function.call.prolog support.type.built-in.prolog"
        }
      },
      "patterns": [
        {
          "include": "$self"
        }
      ]
    },
    "04358e2e175_parameter": {
      "match": "(?<!\\w)_?[A-Z][a-zA-Z0-9_]*(?!\\w)",
      "name": "variable.parameter.prolog"
    },
    "04358e2e175_parameter_destrcturing": {
      "begin": " *+\\[",
      "end": " *+\\]",
      "beginCaptures": {
        "0": {
          "name": "keyword.operator.prolog punctuation.section.binding-pattern.prolog"
        }
      },
      "endCaptures": {
        "0": {
          "name": "keyword.operator.prolog punctuation.section.binding-pattern.prolog"
        }
      },
      "patterns": [
        {
          "include": "#parameter_context"
        },
        {
          "include": "$self"
        }
      ]
    },
    "04358e2e175_predicate_call": {
      "begin": "(?<!\\w)([a-zA-Z0-9_]+) *+(\\()",
      "end": " *+(\\))",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.call.prolog"
        },
        "2": {
          "name": "punctuation.section.function.call.prolog entity.name.function.call.prolog"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.section.function.call.prolog entity.name.function.call.prolog"
        }
      },
      "patterns": [
        {
          "include": "$self"
        }
      ]
    },
    "04358e2e175_predicate_definition": {
      "begin": "(?=(?<!\\w)([a-zA-Z0-9_]+) *+(\\().+(\\)) *+(?=:-))(?<!\\w)([a-zA-Z0-9_]+) *+(\\()",
      "end": " *+(\\)) *+(:-)",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.definition.prolog"
        },
        "2": {
          "name": "punctuation.section.function.definition.prolog entity.name.function.definition.prolog"
        },
        "3": {
          "name": "punctuation.section.function.definition.4.prolog"
        },
        "4": {
          "name": "entity.name.function.definition.prolog"
        },
        "5": {
          "name": "punctuation.section.function.definition.prolog entity.name.function.definition.prolog"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.section.function.definition.prolog entity.name.function.definition.prolog"
        },
        "2": {
          "name": "punctuation.section.function.definition.prolog keyword.operator.prolog"
        }
      },
      "name": "meta.function.definition.prolog",
      "patterns": [
        {
          "include": "#parameter_context"
        },
        {
          "include": "$self"
        }
      ]
    },
    "04358e2e175_special_predicate_import": {
      "match": "(\\[)(?:(?:\\s)+)?([a-zA-Z_][a-zA-Z_0-9]*)(?:(?:\\s)+)?(\\])(?=\\.)",
      "captures": {
        "1": {
          "name": "keyword.control.import.prolog punctuation.section.regexp.prolog keyword.other.unit.import.prolog"
        },
        "2": {
          "name": "variable.language.file.prolog"
        },
        "3": {
          "name": "keyword.control.import.prolog punctuation.section.regexp.prolog keyword.other.unit.import.prolog"
        }
      }
    },
    "5aa8b7571b4_string_double_quote": {
      "begin": "\"",
      "end": "\"",
      "beginCaptures": {
        "0": {
          "name": "string.quoted.prolog"
        }
      },
      "endCaptures": {
        "0": {
          "name": "string.quoted.prolog"
        }
      },
      "name": "string.quoted.double.prolog",
      "patterns": [
        {
          "match": "\\\\x[abcdefABCDEF0-9]+\\\\",
          "name": "constant.character.escape.hex.prolog"
        },
        {
          "match": "\\\\u....|\\\\U........",
          "name": "constant.character.escape.unicode.prolog"
        },
        {
          "match": "\\\\\\\\|''|\\\\'|\\\\\"|\\\"|\\\\a|\\\\b|\\\\c|\\\\e|\\\\f|\\\\n|\\\\r|\\\\s|\\\\t|\\\\v|\\\\\\n",
          "name": "constant.character.escape.prolog"
        }
      ]
    },
    "5aa8b7571b4_string_single_quote": {
      "begin": "'",
      "end": "'",
      "beginCaptures": {
        "0": {
          "name": "string.quoted.prolog"
        }
      },
      "endCaptures": {
        "0": {
          "name": "string.quoted.prolog"
        }
      },
      "name": "string.quoted.single.prolog",
      "patterns": [
        {
          "match": "\\\\x[abcdefABCDEF0-9]+\\\\",
          "name": "constant.character.escape.hex.prolog"
        },
        {
          "match": "\\\\u....|\\\\U........",
          "name": "constant.character.escape.unicode.prolog"
        },
        {
          "match": "\\\\\\\\|''|\\\\'|\\\\\"|\\\"|\\\\a|\\\\b|\\\\c|\\\\e|\\\\f|\\\\n|\\\\r|\\\\s|\\\\t|\\\\v|\\\\\\n",
          "name": "constant.character.escape.prolog"
        }
      ]
    },
    "5eef71a102f_normal_variable": {
      "match": "(?<!\\w)(?:[A-Z]|_)[a-zA-Z0-9_]*(?!\\w)",
      "name": "variable.other.prolog"
    },
    "5eef71a102f_singleton_variable": {
      "match": "(?<!\\w)(?:__|_[A-Z])[a-zA-Z0-9_]*(?!\\w)",
      "name": "variable.other.singleton.prolog"
    },
    "5eef71a102f_special_variable": {
      "match": "(?<!\\w)(_)(?!\\w)",
      "captures": {
        "1": {
          "name": "variable.language.self.anonymous.prolog"
        }
      }
    },
    "character": {
      "patterns": [
        {
          "match": "(0')[^\\\\]",
          "captures": {
            "1": {
              "name": "keyword.other.unit.character.prolog"
            }
          },
          "name": "constant.character.escape.prolog"
        },
        {
          "match": "(0')(?:\\\\\\\\)",
          "captures": {
            "1": {
              "name": "keyword.other.unit.character.prolog"
            }
          },
          "name": "constant.character.escape.prolog"
        },
        {
          "match": "(0'(?:\\\\))([0-7]+)",
          "captures": {
            "1": {
              "name": "keyword.other.unit.octal.prolog"
            },
            "2": {
              "name": "constant.numeric.octal.prolog"
            }
          },
          "name": "constant.character.escape.prolog"
        },
        {
          "match": "(0'(?:\\\\x))([0-9a-fA-F]+)",
          "captures": {
            "1": {
              "name": "keyword.other.unit.hexadecimal.prolog"
            },
            "2": {
              "name": "constant.numeric.hexadecimal.prolog"
            }
          },
          "name": "constant.character.escape.prolog"
        },
        {
          "match": "(0'(?:\\\\u))([0-9]{4})",
          "captures": {
            "1": {
              "name": "keyword.other.unit.character.unicode.prolog"
            },
            "2": {
              "name": "constant.numeric.unicode.prolog"
            }
          },
          "name": "constant.character.escape.prolog"
        },
        {
          "match": "(0'(?:\\\\U))([0-9]{8})",
          "captures": {
            "1": {
              "name": "keyword.other.unit.character.unicode.prolog"
            },
            "2": {
              "name": "constant.numeric.unicode.prolog"
            }
          },
          "name": "constant.character.escape.prolog"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "include": "#00a6652a37a_block_comment"
        },
        {
          "include": "#00a6652a37a_line_comment"
        },
        {
          "include": "#00a6652a37a_inline_comment"
        }
      ]
    },
    "fdd1e9df26b_assignment_operators": {
      "match": "(?:(?:(?<!=|:|@|\\.|>|\\<)(\\=)(?!=|:|@|\\.|>|\\<))|(?:(?<!\\w)(is)(?!\\w)))",
      "captures": {
        "1": {
          "name": "keyword.operator.assignment.prolog"
        },
        "2": {
          "name": "keyword.operator.wordlike.prolog keyword.operator.assignment.prolog"
        }
      }
    },
    "fdd1e9df26b_basic_operators": {
      "match": "(?::|=|(?:\\+)|(?:\\$)|(?:\\/)|(?:\\.)|(?:\\|)|;|(?:\\\\)|>|(?:\\-)|(?:\\?)|(?:\\-)|,|(?:\\+)|(?:\\*)|(?:\\^)|<|(?:\\\\=)|(?:\\*\\*)|(?::<)|(?:\\/\\\\)|(?:\\\\\\/)|(?:>>)|(?:<<)|(?:\\/\\/)|(?:\\->)|(?::\\-)|(?::=)|(?:\\\\\\+)|(?:\\?\\-)|(?:=<)|(?:==)|(?:>=)|(?:@<)|(?:@>)|(?:@=<)|(?:\\*\\->)|(?:=\\.\\.)|(?:=@=)|(?:=:=)|(?:=\\\\=)|(?:\\-\\->)|(?:@>=)|(?:\\\\==)|(?:>:<)|(?:\\\\=@=))",
      "name": "keyword.operator.prolog"
    },
    "fdd1e9df26b_basically_punctuation": {
      "match": ",|\\.",
      "name": "punctuation.terminator.prolog"
    },
    "fdd1e9df26b_predicate_operator": {
      "match": ":-",
      "name": "punctuation.section.function.definition.prolog entity.name.type.prolog keyword.operator.prolog"
    },
    "fdd1e9df26b_word_operators": {
      "match": "(?<!\\w)((?:(?:is)|(?:as)|(?:xor)|(?:div)|(?:mod)|(?:rem)|(?:rdiv)|(?:public)|(?:dynamic)|(?:volatile)|(?:multifile)|(?:thread_local)|(?:discontiguous)|(?:meta_predicate)|(?:initialization)|(?:module_transparent)|(?:thread_initialization)))(?!\\w)",
      "captures": {
        "1": {
          "name": "keyword.operator.wordlike.prolog keyword.operator.prolog"
        }
      }
    },
    "list": {
      "begin": " *+\\[",
      "end": " *+\\]",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.list.prolog"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.list.prolog"
        }
      },
      "patterns": [
        {
          "include": "$self"
        }
      ]
    },
    "numeric_literal": {
      "match": "(?<!\\w)\\.?\\d(?:(?:[0-9a-zA-Z_\\.]|')|(?<=[eEpP])[+-])*",
      "captures": {
        "0": {
          "patterns": [
            {
              "begin": "(?=.)",
              "end": "$",
              "beginCaptures": {
              },
              "endCaptures": {
              },
              "patterns": [
                {
                  "match": "(\\G0[xX])([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?:(?<=[0-9a-fA-F])\\.|\\.(?=[0-9a-fA-F])))([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?(?:(?<!')([pP])((?:\\+)?)((?:\\-)?)([0-9](?:[0-9]|(?<=[0-9a-fA-F])'(?=[0-9a-fA-F]))*))?([lLfF](?!\\w))?$",
                  "captures": {
                    "1": {
                      "name": "keyword.other.unit.hexadecimal.prolog"
                    },
                    "2": {
                      "name": "constant.numeric.hexadecimal.prolog",
                      "patterns": [
                        {
                          "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
                          "name": "punctuation.separator.constant.numeric.prolog"
                        }
                      ]
                    },
                    "3": {
                      "name": "punctuation.separator.constant.numeric.prolog"
                    },
                    "4": {
                      "name": "constant.numeric.hexadecimal.prolog"
                    },
                    "5": {
                      "name": "constant.numeric.hexadecimal.prolog",
                      "patterns": [
                        {
                          "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
                          "name": "punctuation.separator.constant.numeric.prolog"
                        }
                      ]
                    },
                    "6": {
                      "name": "punctuation.separator.constant.numeric.prolog"
                    },
                    "7": {
                      "name": "keyword.other.unit.exponent.hexadecimal.prolog"
                    },
                    "8": {
                      "name": "keyword.operator.plus.exponent.hexadecimal.prolog"
                    },
                    "9": {
                      "name": "keyword.operator.minus.exponent.hexadecimal.prolog"
                    },
                    "10": {
                      "name": "constant.numeric.exponent.hexadecimal.prolog",
                      "patterns": [
                        {
                          "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
                          "name": "punctuation.separator.constant.numeric.prolog"
                        }
                      ]
                    },
                    "11": {
                      "name": "keyword.other.unit.suffix.floating-point.prolog"
                    }
                  }
                },
                {
                  "match": "\\G(?=[0-9.])(?!0[xXbB])([0-9](?:[0-9]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?((?:(?<=[0-9])\\.|\\.(?=[0-9])))([0-9](?:[0-9]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)?(?:(?<!')([eE])((?:\\+)?)((?:\\-)?)([0-9](?:[0-9]|(?<=[0-9a-fA-F])'(?=[0-9a-fA-F]))*))?([lLfF](?!\\w))?$",
                  "captures": {
                    "1": {
                      "name": "constant.numeric.decimal.prolog",
                      "patterns": [
                        {
                          "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
                          "name": "punctuation.separator.constant.numeric.prolog"
                        }
                      ]
                    },
                    "2": {
                      "name": "punctuation.separator.constant.numeric.prolog"
                    },
                    "3": {
                      "name": "constant.numeric.decimal.point.prolog"
                    },
                    "4": {
                      "name": "constant.numeric.decimal.prolog",
                      "patterns": [
                        {
                          "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
                          "name": "punctuation.separator.constant.numeric.prolog"
                        }
                      ]
                    },
                    "5": {
                      "name": "punctuation.separator.constant.numeric.prolog"
                    },
                    "6": {
                      "name": "keyword.other.unit.exponent.decimal.prolog"
                    },
                    "7": {
                      "name": "keyword.operator.plus.exponent.decimal.prolog"
                    },
                    "8": {
                      "name": "keyword.operator.minus.exponent.decimal.prolog"
                    },
                    "9": {
                      "name": "constant.numeric.exponent.decimal.prolog",
                      "patterns": [
                        {
                          "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
                          "name": "punctuation.separator.constant.numeric.prolog"
                        }
                      ]
                    },
                    "10": {
                      "name": "keyword.other.unit.suffix.floating-point.prolog"
                    }
                  }
                },
                {
                  "match": "(\\G0[bB])([01](?:[01]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)((?:[uU]|(?:[uU]ll?)|(?:[uU]LL?)|(?:ll?[uU]?)|(?:LL?[uU]?)|[fF])(?!\\w))?$",
                  "captures": {
                    "1": {
                      "name": "keyword.other.unit.binary.prolog"
                    },
                    "2": {
                      "name": "constant.numeric.binary.prolog",
                      "patterns": [
                        {
                          "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
                          "name": "punctuation.separator.constant.numeric.prolog"
                        }
                      ]
                    },
                    "3": {
                      "name": "punctuation.separator.constant.numeric.prolog"
                    },
                    "4": {
                      "name": "keyword.other.unit.suffix.integer.prolog"
                    }
                  }
                },
                {
                  "match": "(\\G0)((?:[0-7]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))+)((?:[uU]|(?:[uU]ll?)|(?:[uU]LL?)|(?:ll?[uU]?)|(?:LL?[uU]?)|[fF])(?!\\w))?$",
                  "captures": {
                    "1": {
                      "name": "keyword.other.unit.octal.prolog"
                    },
                    "2": {
                      "name": "constant.numeric.octal.prolog",
                      "patterns": [
                        {
                          "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
                          "name": "punctuation.separator.constant.numeric.prolog"
                        }
                      ]
                    },
                    "3": {
                      "name": "punctuation.separator.constant.numeric.prolog"
                    },
                    "4": {
                      "name": "keyword.other.unit.suffix.integer.prolog"
                    }
                  }
                },
                {
                  "match": "(\\G0[xX])([0-9a-fA-F](?:[0-9a-fA-F]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)(?:(?<!')([pP])((?:\\+)?)((?:\\-)?)([0-9](?:[0-9]|(?<=[0-9a-fA-F])'(?=[0-9a-fA-F]))*))?((?:[uU]|(?:[uU]ll?)|(?:[uU]LL?)|(?:ll?[uU]?)|(?:LL?[uU]?)|[fF])(?!\\w))?$",
                  "captures": {
                    "1": {
                      "name": "keyword.other.unit.hexadecimal.prolog"
                    },
                    "2": {
                      "name": "constant.numeric.hexadecimal.prolog",
                      "patterns": [
                        {
                          "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
                          "name": "punctuation.separator.constant.numeric.prolog"
                        }
                      ]
                    },
                    "3": {
                      "name": "punctuation.separator.constant.numeric.prolog"
                    },
                    "4": {
                      "name": "keyword.other.unit.exponent.hexadecimal.prolog"
                    },
                    "5": {
                      "name": "keyword.operator.plus.exponent.hexadecimal.prolog"
                    },
                    "6": {
                      "name": "keyword.operator.minus.exponent.hexadecimal.prolog"
                    },
                    "7": {
                      "name": "constant.numeric.exponent.hexadecimal.prolog",
                      "patterns": [
                        {
                          "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
                          "name": "punctuation.separator.constant.numeric.prolog"
                        }
                      ]
                    },
                    "8": {
                      "name": "keyword.other.unit.suffix.integer.prolog"
                    }
                  }
                },
                {
                  "match": "\\G(?=[0-9.])(?!0[xXbB])([0-9](?:[0-9]|((?<=[0-9a-fA-F])'(?=[0-9a-fA-F])))*)(?:(?<!')([eE])((?:\\+)?)((?:\\-)?)([0-9](?:[0-9]|(?<=[0-9a-fA-F])'(?=[0-9a-fA-F]))*))?((?:[uU]|(?:[uU]ll?)|(?:[uU]LL?)|(?:ll?[uU]?)|(?:LL?[uU]?)|[fF])(?!\\w))?$",
                  "captures": {
                    "1": {
                      "name": "constant.numeric.decimal.prolog",
                      "patterns": [
                        {
                          "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
                          "name": "punctuation.separator.constant.numeric.prolog"
                        }
                      ]
                    },
                    "2": {
                      "name": "punctuation.separator.constant.numeric.prolog"
                    },
                    "3": {
                      "name": "keyword.other.unit.exponent.decimal.prolog"
                    },
                    "4": {
                      "name": "keyword.operator.plus.exponent.decimal.prolog"
                    },
                    "5": {
                      "name": "keyword.operator.minus.exponent.decimal.prolog"
                    },
                    "6": {
                      "name": "constant.numeric.exponent.decimal.prolog",
                      "patterns": [
                        {
                          "match": "(?<=[0-9a-fA-F])'(?=[0-9a-fA-F])",
                          "name": "punctuation.separator.constant.numeric.prolog"
                        }
                      ]
                    },
                    "7": {
                      "name": "keyword.other.unit.suffix.integer.prolog"
                    }
                  }
                },
                {
                  "match": "(?:(?:[0-9a-zA-Z_\\.]|')|(?<=[eEpP])[+-])+",
                  "name": "invalid.illegal.constant.numeric.prolog"
                }
              ]
            }
          ]
        }
      }
    },
    "operators": {
      "patterns": [
        {
          "include": "#fdd1e9df26b_basically_punctuation"
        },
        {
          "include": "#fdd1e9df26b_predicate_operator"
        },
        {
          "include": "#fdd1e9df26b_assignment_operators"
        },
        {
          "include": "#fdd1e9df26b_word_operators"
        },
        {
          "include": "#fdd1e9df26b_basic_operators"
        }
      ]
    },
    "paraentheses": {
      "begin": " *+\\(",
      "end": " *+\\)",
      "beginCaptures": {
        "0": {
          "name": "punctuation.parenthesis.prolog"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.parenthesis.prolog"
        }
      },
      "patterns": [
        {
          "include": "$self"
        }
      ]
    },
    "parameter_context": {
      "patterns": [
        {
          "include": "#04358e2e175_parameter"
        },
        {
          "include": "#04358e2e175_parameter_destrcturing"
        },
        {
          "include": "#$self"
        }
      ]
    },
    "predicate": {
      "patterns": [
        {
          "include": "#04358e2e175_special_predicate_import"
        },
        {
          "include": "#04358e2e175_predicate_definition"
        },
        {
          "include": "#04358e2e175_built_in_predicates"
        },
        {
          "include": "#04358e2e175_predicate_call"
        }
      ]
    },
    "string": {
      "patterns": [
        {
          "include": "#5aa8b7571b4_string_double_quote"
        },
        {
          "include": "#5aa8b7571b4_string_single_quote"
        }
      ]
    },
    "symbol": {
      "match": "(?<!\\w)[a-z][a-zA-Z0-9_]*(?!\\w)((?:\\/\\d+)?)",
      "captures": {
        "1": {
          "name": "keyword.other.unit.prolog"
        }
      },
      "name": "constant.language.symbol.prolog punctuation.section.regexp.prolog"
    },
    "variables": {
      "patterns": [
        {
          "include": "#5eef71a102f_special_variable"
        },
        {
          "include": "#5eef71a102f_singleton_variable"
        },
        {
          "include": "#5eef71a102f_normal_variable"
        }
      ]
    }
  }
}